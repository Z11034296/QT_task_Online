# Generated by Django 2.1.3 on 2019-03-25 07:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('TestCase', '0008_sheet_sheet_description'),
        ('UserProfile', '0004_userinfo_site'),
    ]

    operations = [
        migrations.CreateModel(
            name='ControlTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_table_name', models.CharField(max_length=255, verbose_name='Task Name')),
                ('control_table_sheet', models.CharField(max_length=255, unique=True, verbose_name='control_table_sheet')),
            ],
            options={
                'verbose_name_plural': 'Control Table',
            },
        ),
        migrations.CreateModel(
            name='ControlTable_sheetinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tester', models.CharField(max_length=255)),
                ('sheet', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Project.ControlTable')),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_id', models.IntegerField(auto_created=True)),
                ('bugzilla_id', models.CharField(blank=True, max_length=32, null=True)),
                ('category', models.SmallIntegerField(choices=[(0, 'HW'), (1, 'Key_Component'), (2, 'FW'), (3, 'Driver'), (4, 'SW'), (5, 'ME')], verbose_name='Category')),
                ('attribute', models.SmallIntegerField(choices=[(0, '[HW]Main Board'), (1, '[HW]Daughter Board'), (2, '[HW]Signal Integrity'), (3, '[HW]Antenna'), (4, '[HW]EMC/Safety'), (5, '[HW]Thermal'), (6, '[HW]Acoustic'), (7, '[HW]Others'), (8, '[KC]Chipset'), (9, '[KC]CPU/APU'), (10, '[KC]VGA'), (11, '[KC]Memory'), (12, '[KC]HDD/SDD/mSATA'), (13, '[KC]ODD'), (14, '[KC]Panel'), (15, '[KC]Touch Panel'), (16, '[KC]Camera'), (17, '[KC]Card Reader'), (18, '[KC]LAN'), (19, '[KC]WLAN'), (20, '[KC]BlueTooth'), (21, '[KC]Micphone'), (22, '[KC]KB/Mouse'), (23, '[KC]Remote Control'), (24, '[KC]Adapter/PSU'), (25, '[KC]USB'), (26, '[KC]Audio'), (27, '[KC]Speaker'), (28, '[KC]Sensor'), (29, '[KC]NFC'), (30, '[KC]TPM'), (31, '[KC]Others'), (32, '[FW]BIOS'), (33, '[FW]EC'), (34, '[FW]Inter ME'), (35, '[FW]Others'), (36, '[Driver]Chipset'), (37, '[Driver]CPU/APU'), (38, '[Driver]VGA'), (39, '[Driver]Touch Panel'), (40, '[Driver]Camera'), (41, '[Driver]Card Reader'), (42, '[Driver]LAN'), (43, '[Driver]WLAN'), (44, '[Driver]BlueTooth'), (45, '[Driver]Hot Key'), (46, '[Driver]Audio'), (47, '[Driver]Sensor'), (48, '[Driver]Others'), (49, '[SW]OS'), (50, '[SW]Application'), (51, '[SW]Preload'), (52, '[ME]Structure'), (53, '[ME]Cosmetic'), (54, '[ME]Cable'), (55, '[ME]Parts'), (56, '[ME]Packing'), (57, '[ME]ID'), (58, '[ME]Others')], verbose_name='attribute')),
                ('attribute_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='manufacturer')),
                ('severity', models.SmallIntegerField(choices=[(0, '1'), (1, '2'), (2, '3'), (3, '4')], verbose_name='severity')),
                ('description', models.TextField(blank=True, max_length=2048, null=True)),
                ('procedure', models.TextField(blank=True, max_length=2048, null=True)),
                ('comment', models.TextField(blank=True, max_length=2048, null=True)),
                ('root_cause', models.TextField(blank=True, max_length=2048, null=True)),
                ('solution', models.TextField(blank=True, max_length=2048, null=True)),
                ('status', models.SmallIntegerField(choices=[(0, 'Open'), (1, 'Closed'), (2, 'Verify'), (3, 'Limitation')], verbose_name='status')),
                ('solving_type', models.SmallIntegerField(blank=True, choices=[(0, 'Fixed'), (1, 'Spec Changed'), (2, 'Design'), (3, 'Limitation'), (4, 'Deferred'), (5, 'Withdraw'), (6, 'Duplicated'), (7, 'Cannot Duplicated')], null=True)),
                ('open_date', models.DateField()),
                ('verify_date', models.DateField(blank=True, null=True)),
                ('close_date', models.DateField(blank=True, null=True)),
                ('owner', models.CharField(blank=True, max_length=64, null=True)),
                ('motherboard_version', models.CharField(blank=True, max_length=32, null=True)),
                ('bios_version', models.CharField(blank=True, max_length=32, null=True)),
                ('os_version', models.CharField(blank=True, max_length=64, null=True)),
                ('remark', models.TextField(blank=True, max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_table', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Project.ControlTable')),
                ('sheet', models.ManyToManyField(blank=True, to='TestCase.Sheet')),
                ('tester', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='UserProfile.UserInfo')),
            ],
            options={
                'verbose_name_plural': 'Personal Task',
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=255, unique=True)),
                ('project_name', models.CharField(blank=True, max_length=64, null=True)),
                ('project_model', models.CharField(blank=True, max_length=255, null=True)),
                ('schedule_start', models.DateField(verbose_name='开始日期')),
                ('schedule_end', models.DateField(verbose_name='结束日期')),
                ('project_sku_qty', models.CharField(blank=True, max_length=255, null=True, verbose_name='sku 数量')),
                ('project_is_leading_project', models.CharField(blank=True, max_length=255, null=True, verbose_name='是否Leading')),
                ('project_progress', models.CharField(blank=True, max_length=255, null=True, verbose_name='进度')),
                ('project_platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Project.Platform')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_bios', models.CharField(blank=True, max_length=255, null=True, verbose_name='BIOS')),
                ('project_mb', models.CharField(blank=True, max_length=255, null=True, verbose_name='MB')),
                ('project_os', models.CharField(blank=True, max_length=255, null=True, verbose_name='OS')),
                ('update_time', models.DateTimeField(auto_now_add=True)),
                ('dr_chipset', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Chipset')),
                ('dr_vga', models.TextField(blank=True, default=None, max_length=2000, null=True, verbose_name='VGA')),
                ('dr_iamt', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='iAMT')),
                ('dr_storage', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Storage')),
                ('dr_lan', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='LAN')),
                ('dr_audio', models.TextField(blank=True, default=None, max_length=2000, null=True, verbose_name='Audio')),
                ('dr_cr', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='CardReader')),
                ('dr_wireless', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='WirelessLAN')),
                ('dr_bt', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='BT')),
                ('dr_panel', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Panel')),
                ('dr_finger_printer', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='FingerPrinter')),
                ('dr_g_sensor', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='G-sensor')),
                ('dr_camera', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Camera')),
                ('dr_usb', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='USB')),
                ('dr_com_parallel', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Comport Parallel')),
                ('dr_serial_io', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Serial IO')),
                ('dr_sgx', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='SGX')),
                ('dr_others', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='others')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Project.Project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_result', models.SmallIntegerField(choices=[(0, 'Pass'), (1, 'Fail'), (2, 'N/A')])),
                ('control_table', models.ForeignKey(default='123', on_delete=django.db.models.deletion.CASCADE, to='Project.ControlTable')),
                ('issue_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Project.Issue')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Project.Project')),
                ('test_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestCase.TestCase', verbose_name='test case')),
                ('tester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UserProfile.UserInfo')),
            ],
            options={
                'verbose_name_plural': '测试结果',
            },
        ),
        migrations.AddField(
            model_name='project',
            name='project_style',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Project.ProjectStyle'),
        ),
        migrations.AddField(
            model_name='project',
            name='project_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Project.ProjectType'),
        ),
        migrations.AddField(
            model_name='project',
            name='test_leader_whq',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='whq', to='UserProfile.UserInfo'),
        ),
        migrations.AddField(
            model_name='project',
            name='test_leader_wzs',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wzs', to='UserProfile.UserInfo'),
        ),
        migrations.AddField(
            model_name='issue',
            name='project',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Project.Project'),
        ),
        migrations.AddField(
            model_name='issue',
            name='submitter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UserProfile.UserInfo', verbose_name='bug 提交人'),
        ),
        migrations.AddField(
            model_name='controltable',
            name='project_name',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Project.Project'),
        ),
        migrations.AlterUniqueTogether(
            name='testresult',
            unique_together={('project', 'test_case')},
        ),
        migrations.AlterUniqueTogether(
            name='personaltask',
            unique_together={('tester', 'control_table')},
        ),
    ]
